# Функция hash() возвращает хеш-значение объекта, если оно есть. Хэш-значения являются целыми числами.
# Они используются для быстрого сравнения ключей словаря во время поиска в словаре.
# Равные числовые значения имеют одинаковое значение хеш-функции, даже если они имеют разные типы
# Хэш-значения имеют только неизменяемые объекты PYTHON, то есть словари и списки не имеют хэш-значения.

# Тип данных: set() - множество. Изменяемый тип. Содержит только уникальные элементы.
# set.add(elem) - добавляет элемент в множество.
# set.pop() - удаляет первый элемент из множества.
# Так как множества не упорядочены, нельзя точно сказать, какой элемент будет первым.
# set.update - объединение.
# set.issubset(other) - проверяет является ли set подмножеством other. Возвращает True или False.
# len() - число элементов в множестве (размер множества).
# x in s - принадлежит ли x множеству s.

# Задача А. Дан текст: в первой строке записано число строк, далее идут сами строки.
# Определите, сколько различных слов содержится в этом тексте.

# n = int(input("Введите количество строк в тексте:"))
# text = set()
# for i in range(n):
#     text.update(input().split())
# print(len(text))

# frozenset
# Единственное отличие set от frozenset заключается в том, что set - изменяемый тип данных, а frozenset - нет.

# Zip(). Функция zip() создает итератор кортежей,
# который объединяет элементы каждой из переданных последовательностей *iterables.
# *iterables - последовательность аргументов или итераций.

names = ["Юлия", "Николай", "Грегорий"]
moneys = [1500, 1000, 1750]
print(list(zip(names, moneys)))




